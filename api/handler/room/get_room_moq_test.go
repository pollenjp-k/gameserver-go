// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package room

import (
	"context"
	"github.com/pollenjp/gameserver-go/api/entity"
	"github.com/pollenjp/gameserver-go/api/service"
	"sync"
)

// Ensure, that GetRoomListServiceMock does implement GetRoomListService.
// If this is not the case, regenerate this file with moq.
var _ GetRoomListService = &GetRoomListServiceMock{}

// GetRoomListServiceMock is a mock implementation of GetRoomListService.
//
//	func TestSomethingThatUsesGetRoomListService(t *testing.T) {
//
//		// make and configure a mocked GetRoomListService
//		mockedGetRoomListService := &GetRoomListServiceMock{
//			GetRoomListFunc: func(ctx context.Context, LiveId entity.LiveId) ([]*service.RoomInfoItem, error) {
//				panic("mock out the GetRoomList method")
//			},
//		}
//
//		// use mockedGetRoomListService in code that requires GetRoomListService
//		// and then make assertions.
//
//	}
type GetRoomListServiceMock struct {
	// GetRoomListFunc mocks the GetRoomList method.
	GetRoomListFunc func(ctx context.Context, LiveId entity.LiveId) ([]*service.RoomInfoItem, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetRoomList holds details about calls to the GetRoomList method.
		GetRoomList []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// LiveId is the LiveId argument value.
			LiveId entity.LiveId
		}
	}
	lockGetRoomList sync.RWMutex
}

// GetRoomList calls GetRoomListFunc.
func (mock *GetRoomListServiceMock) GetRoomList(ctx context.Context, LiveId entity.LiveId) ([]*service.RoomInfoItem, error) {
	if mock.GetRoomListFunc == nil {
		panic("GetRoomListServiceMock.GetRoomListFunc: method is nil but GetRoomListService.GetRoomList was just called")
	}
	callInfo := struct {
		Ctx    context.Context
		LiveId entity.LiveId
	}{
		Ctx:    ctx,
		LiveId: LiveId,
	}
	mock.lockGetRoomList.Lock()
	mock.calls.GetRoomList = append(mock.calls.GetRoomList, callInfo)
	mock.lockGetRoomList.Unlock()
	return mock.GetRoomListFunc(ctx, LiveId)
}

// GetRoomListCalls gets all the calls that were made to GetRoomList.
// Check the length with:
//
//	len(mockedGetRoomListService.GetRoomListCalls())
func (mock *GetRoomListServiceMock) GetRoomListCalls() []struct {
	Ctx    context.Context
	LiveId entity.LiveId
} {
	var calls []struct {
		Ctx    context.Context
		LiveId entity.LiveId
	}
	mock.lockGetRoomList.RLock()
	calls = mock.calls.GetRoomList
	mock.lockGetRoomList.RUnlock()
	return calls
}
